#!/bin/bash

### TODO: move to permanent location
#GPMIN_HOME=/Users/andreirusu/projects/spearmint/spearmint
GPMIN_HOME=/dmt3/software/spearmint/spearmint

### SPEARMINT DEFAULT OPTIONS
MAX_CONCURRENT=10
MAX_JOBS=1000
GRID_SEED=$RANDOM

### CHECK THE NUMBER OF COMNMAND LINE ARUGMENTS; 2 REQUIRED
if [ "$#" -lt "2" -o "$1" == "-h" -o  "$1" == "-help" -o  "$1" == "--help" ] 
then
    name=`basename $0`
    echo "Usage: 
    $name CONFIG-FILE COMMAND 
    
The first two arguments are compulsory.   

CONFIG-FILE must be a valid spearmint configuration file, with a few restrictions:
    All the variable names must be supported as command line arguments by the target executable (case sensitive).
    Only single dimensional variables are supported; please set \"size\" to 1 for all variables in the CONFIG-FILE. 

COMMAND can be any bash command-line call which is valid after: 
    (1) all the options in the CONFIG-FILE are appended with their respective values, and
    (2) the \"--write-cost-to-file OUTFILE\" options is appended.

Hence, the only restrictions are that COMMAND must write the minimization objective (cost) to OUTFILE and all the CONFIG-FILE variable must be valid command-line arguments when postfixed to COMMAND. Please only use absolute file paths in COMMAND.

"
    exit
fi

### CHECK THAT THE FIRST ARGUMENT IS AN EXISTING FILE
if [[ -e "$1" ]] 
then
    DATE=$(date +".%Y.%m.%d.%H.%M.%S")
    EXP_DIR=$PWD/`basename $0`$DATE'.'$GRID_SEED'.'$$ 
    mkdir -p $EXP_DIR   
    # put together a working directory for spearmint 
    cp $1 $EXP_DIR/config.pb
    cp $GPMIN_HOME/generic/job.py $EXP_DIR
    cd $EXP_DIR
    echo "Current experiment: "$PWD
else
    echo 'Specify the path to a config file!'
    exit
fi

### SET THE COMMAND TO RUN
SPEARMINT_GPMIN_CMD="${@:2}"' $* ' 

echo "COMMAND: "$SPEARMINT_GPMIN_CMD
echo $SPEARMINT_GPMIN_CMD > $EXP_DIR/job.sh

### SCHEDULE SPEARMINT JOB
echo 'Starting spearmint on SGE...'
/dmt3/software/bin/crunch -q torch.q -V -b y "cd $GPMIN_HOME; python spearmint.py --method=GPEIOptChooser --max-concurrent=$MAX_CONCURRENT --max-finished-jobs=$MAX_JOBS --grid-seed=$GRID_SEED $EXP_DIR "



